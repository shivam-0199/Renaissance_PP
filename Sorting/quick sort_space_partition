https://www.geeksforgeeks.org/problems/quick-sort/

//{ Driver Code Starts
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;

/* Function to print an array */
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

// } Driver Code Ends
class Solution
{
    public:
    //Function to sort an array using quick sort algorithm.
    void quickSort(int arr[], int low, int high)
    {
        // code here
        if(low<high){
            int pelem=partition(arr,low,high);
            quickSort(arr,low,pelem-1);
            quickSort(arr,pelem+1,high);
            
        }
        
    }
    
    public:
    int partition (int arr[], int low, int high)
    {
       // Your code here
       int p=arr[low];
       int n=high-low+1;
       
       vector<int>lesser;
       vector<int>greater;
       for(int i=low+1;i<=high;i++){
           if(arr[i]<p){
               lesser.push_back(arr[i]);
           }else{
               greater.push_back(arr[i]);
           }
       }
       int q=low;
       int r=0;
       while(r<lesser.size()){
           arr[q++]=lesser[r++];
       }
       int m=q;
       arr[q]=p;
       q++;
        r=0;
       while(r<greater.size()){
           arr[q++]=greater[r++];
       }
       return m;
    }
};


//{ Driver Code Starts.
int main()
{
    int arr[1000],n,T,i;
    scanf("%d",&T);
    while(T--){
    scanf("%d",&n);
    for(i=0;i<n;i++)
      scanf("%d",&arr[i]);
      Solution ob;
    ob.quickSort(arr, 0, n-1);
    printArray(arr, n);
    }
    return 0;
}
// } Driver Code Ends
