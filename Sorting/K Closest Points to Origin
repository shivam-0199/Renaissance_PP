https://leetcode.com/problems/k-closest-points-to-origin/description/

class Solution {
public:
    static  bool cmp(vector<int> &p1,vector<int> &p2){

        long long d1= (p1[0]*p1[0] + p1[1]*p1[1]);
        long long d2= (p2[0]*p2[0] + p2[1]*p2[1]);

         return d1<d2;

    }
 
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
 
        vector<int> tmp;

        sort(points.begin(), points.end(), cmp);

         for (int i = 0; i < k; i++){
            tmp.push_back(points[i][0]);
            tmp.push_back(points[i][1]);
            ans.push_back(tmp);
            tmp.pop_back();
            tmp.pop_back();
       }
    return ans;
        
    }
};
